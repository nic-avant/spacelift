name: Build Change Handler FastAPI App
on:
  push:
    branches:
      - "build/**"
      - "avant-main"
jobs:
  build-and-push-image:
    runs-on: aws-global-services
    env:
      fqin: 926494997070.dkr.ecr.us-east-2.amazonaws.com/infrastructure-change-handler
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install tomli
        run: pip install tomli

      - name: Get version from pyproject.toml
        id: get_version
        run: |
          VERSION=$(python -c "import tomli; print(tomli.load(open('pyproject.toml', 'rb'))['tool']['poetry']['version'])")
          echo "VERSION=v${VERSION}" >> $GITHUB_ENV

      - name: Configure OrganizationDeployAccessRole role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::926494997070:role/OrganizationDeployAccessRole
          aws-region: us-east-2
          role-duration-seconds: 3600

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PAT }}

      - name: Set build variables
        id: vars
        run: |
          echo "GIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Build the Docker image
        run: |
          docker build . \
            --file Dockerfile \
            --tag $fqin:${{ env.VERSION }} \
            --tag $fqin:${{ env.GIT_SHA }} \
            --tag $fqin:latest

      - name: Login to AWS ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v2

      - name: Push the Docker image
        run: |
          docker push $fqin:sha-${{ env.GIT_SHA }}
          docker push $fqin:latest

      - name: Push the Docker image with version tag on avant-main branch
        # TODO: change to avant-main
        if: github.ref == 'refs/heads/main'
        run: |
          docker push $fqin:${{ env.VERSION }}
